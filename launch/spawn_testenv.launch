<launch>
	<!-- Launch Gazebo  -->
	<arg default="false" name="paused"/>
	<arg default="true" name="use_sim_time"/>
	<arg default="true" name="gui"/>
	<arg default="false" name="headless"/>
	<arg default="false" name="debug"/>
	
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="debug" value="$(arg debug)"/>
		<arg name="gui" value="$(arg gui)"/>
		<arg name="paused" value="$(arg paused)"/>
		<arg name="use_sim_time" value="$(arg use_sim_time)"/>
		<arg name="headless" value="$(arg headless)"/>
	</include>

	<!-- Load the URDF into the ROS Parameter Server -->
	<param command="$(find xacro)/xacro --inorder '$(find testbench6dof)/urdf/testenv6dof.xacro'" name="robot_description"/>
	
	<!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
	<node args="-urdf -model testenv6dof -param robot_description" name="urdf_spawner" output="screen" pkg="gazebo_ros" respawn="false" type="spawn_model"/>
	
	<!-- Load joint controller configurations from YAML file to parameter server -->
	<rosparam command="load" file="$(find testbench6dof)/config/testenv_joint_states.yaml"/>
	<node args="joint_state_controller" name="joint_controller_spawner" ns="/" output="screen" pkg="controller_manager" respawn="false" type="spawner"/>
	
	<!-- convert joint states to TF transforms for rviz, etc -->
	<node name="robot_state_publisher" output="screen" pkg="robot_state_publisher" respawn="false" type="robot_state_publisher">
		<!--    <remap from="/joint_states" to="/robot_5s/joint_states" />-->
	</node>

	<rosparam command="load" file="$(find testbench6dof)/config/testenv_trajectory_control.yaml"/>
	<node args="testenv_arm_joint_controller" name="testenv_controller_spawner" ns="/" output="screen" pkg="controller_manager" respawn="false" type="spawner"/>
</launch>